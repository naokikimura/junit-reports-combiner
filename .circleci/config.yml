# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  dscar-eslint:
    description: Delta ESLint Reports
    orbs:
      dscar: naokikimura/dscar@dev:0.0.0
    executors:
      default:
        description: Use a CircleCI convenience image to analyze code statically
        docker:
        - image: circleci/node:lts
    commands:
      execute:
        parameters:
          analysis-prepare:
            description: Specify the required steps before eslint if necessary
            type: steps
            default:
              - run: npm install --global eslint
          analysis-arguments:
            description: Arguments of eslint command
            type: string
            default: --ext '.js,.jsx,.ts,.tsx' .
          test-results-path:
            description: Specify the value of the path parameter in the store_test_results step if you need to change it
            type: string
            default: "/tmp/test-results"
        steps:
          - dscar/execute:
              analysis-name: ESLint
              analysis-command: npx eslint
              analysis-prepare: << parameters.analysis-prepare >>
              analysis-arguments: << parameters.analysis-arguments >> -f junit
              calculate-options: --test-case-key='concat(@classname,"#",@name,"=>",normalize-space())'
              test-results-path: << parameters.test-results-path >>
    jobs:
      execute:
        description: Calculate the difference of ESLint results between HEAD branch and BASE branch
        parameters:
          executor:
            type: executor
            default: default
          analysis-prepare:
            description: Specify the required steps before eslint if necessary
            type: steps
            default:
              - run: npm install --global eslint
          analysis-arguments:
            description: Arguments of eslint command
            type: string
            default: --ext '.js,.jsx,.ts,.tsx' .
          test-results-path:
            description: Specify the value of the path parameter in the store_test_results step if you need to change it
            type: string
            default: "/tmp/test-results"
        executor: << parameters.executor >>
        steps:
          - execute:
              analysis-prepare: << parameters.analysis-prepare >>
              analysis-arguments: << parameters.analysis-arguments >>
              test-results-path: << parameters.test-results-path >>

executors:
  default:
    docker:
    # specify the version you desire here
    - image: circleci/node:lts

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

commands:
  restore_node_modules:
    steps:
    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

jobs:
  setup:
    executor:
      name: default

    steps:
    - checkout
    - restore_node_modules
    - run: npm install

    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}

  test:
    executor:
      name: default

    steps:
    - checkout
    - restore_node_modules

    # run tests!
    - run: npx nyc npm test

    - run:
        command: npx nyc report --reporter=text-lcov | npx codecov --pipe
        when: always

    - store_test_results:
        path: ./reports

  publish:
    executor:
      name: default

    steps:
      - checkout
      - restore_node_modules

      - deploy:
          command: |
              echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >> `sh -c "echo ${CIRCLE_WORKING_DIRECTORY}"`/.npmrc
              npm publish

workflows:
  setup-test-publish:
    jobs:
    - setup:
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/
    - test:
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/
        requires:
        - setup
    - dscar-eslint/execute:
        name: lint
        executor: default
        analysis-prepare:
          - restore_node_modules
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/
        requires:
        - setup
    - hold:
        type: approval
        filters:
          tags:
            only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
          branches:
            ignore: /.*/
        requires:
        - test
    - publish:
        filters:
          tags:
            only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
          branches:
            ignore: /.*/
        requires:
        - hold
